plugins {
    id 'java'
    id 'maven'
    id 'signing'
}

group 'org.forome'
version '1.13.2'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
archivesBaseName = "rdao"

if (project.hasProperty('ossrhUsername')) {
    apply from: 'publish.gradle'
}

sourceCompatibility = 1.8

sourceSets {
    main {
        java.srcDir 'src/main/java'
        resources.srcDir 'src/main/resources'
    }
    test {
        java.srcDir 'src/test/java'
        resources.srcDir 'src/test/resources'
    }
    test_performance {
        java.srcDir 'src/test_performance/java'
        resources.srcDir 'src/test_performance/resources'
        compileClasspath += configurations.compile + configurations.testCompile + sourceSets.main.output + sourceSets.test.output
    }
}

repositories {
    mavenCentral()
}

dependencies {

    compile group: 'org.rocksdb', name: 'rocksdbjni', version: '6.8.1'
    compile 'com.google.guava:guava:23.0'
    compile 'net.minidev:json-smart:2.2.1'
    compile 'org.slf4j:slf4j-api:1.7.25'

    testCompile group: 'junit', name: 'junit', version: '4.13-beta-3'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'

    testCompile 'ch.qos.logback:logback-core:1.2.2'
    testCompile 'ch.qos.logback:logback-classic:1.2.2'

    testCompile 'org.apache.commons:commons-io:1.3.2'
    testCompile 'org.apache.commons:commons-math:2.0'
}

task test_performance(type: Test, description: 'Performance test', group: 'Verification') {}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: 'developerForome', password: 'FT39MzT7PyA6EkZ&')
            }

            snapshotRepository(url: "https://s01.oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: 'developerForome', password: 'FT39MzT7PyA6EkZ&')
            }

            pom.project {
                name 'Example Application'
                packaging 'jar'
                url 'https://github.com/ForomePlatform/rdao'

                scm {
                    connection 'scm:git:https://github.com/ForomePlatform/rdao.git'
                    developerConnection 'scm:svn:https://github.com/ForomePlatform/rdao.git'
                    url 'https://github.com/ForomePlatform/rdao.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}
